diff --git a/codes/models/archs/EDVR_arch.py b/codes/models/archs/EDVR_arch.py
index df9c032..7e06492 100644
--- a/codes/models/archs/EDVR_arch.py
+++ b/codes/models/archs/EDVR_arch.py
@@ -7,7 +7,8 @@ import models.archs.arch_util as arch_util
 try:
     from models.archs.dcn.deform_conv import ModulatedDeformConvPack as DCN
 except ImportError:
-    raise ImportError('Failed to import DCNv2 module.')
+    #raise ImportError('Failed to import DCNv2 module.')
+    pass 
 
 
 class Predeblur_ResNet_Pyramid(nn.Module):
diff --git a/codes/models/archs/arch_util.py b/codes/models/archs/arch_util.py
index ca5d7fa..e920c23 100644
--- a/codes/models/archs/arch_util.py
+++ b/codes/models/archs/arch_util.py
@@ -41,13 +41,15 @@ class ResidualBlock_noBN(nn.Module):
         super(ResidualBlock_noBN, self).__init__()
         self.conv1 = nn.Conv2d(nf, nf, 3, 1, 1, bias=True)
         self.conv2 = nn.Conv2d(nf, nf, 3, 1, 1, bias=True)
+        self.relu = nn.ReLU()
 
         # initialization
         initialize_weights([self.conv1, self.conv2], 0.1)
 
     def forward(self, x):
         identity = x
-        out = F.relu(self.conv1(x), inplace=True)
+        # out = F.relu(self.conv1(x), inplace=True)
+        out = self.relu(self.conv1(x))
         out = self.conv2(out)
         return identity + out
 
