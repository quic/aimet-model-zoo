--- ../../../lidar-bonnetal/train/backbones/darknet.py	2023-01-23 12:02:15.362788000 -0800
+++ ../rangenet/models/train/backbones/darknet.py	2023-01-23 14:17:12.931969000 -0800
@@ -148,16 +148,17 @@
 
   def run_layer(self, x, layer, skips, os):
     y = layer(x)
-    if y.shape[2] < x.shape[2] or y.shape[3] < x.shape[3]:
-      skips[os] = x.detach()
-      os *= 2
     x = y
     return x, skips, os
 
-  def forward(self, x):
-    # filter input
-    x = x[:, self.input_idxs]
+  def run_layer_skip(self, x, layer, skips, os):
+    y = layer(x)
+    skips[os] = x.detach()
+    os *= 2
+    x = y
+    return x, skips, os
 
+  def forward(self, x):
     # run cnn
     # store for skip connections
     skips = {}
@@ -169,15 +170,15 @@
     x, skips, os = self.run_layer(x, self.relu1, skips, os)
 
     # all encoder blocks with intermediate dropouts
-    x, skips, os = self.run_layer(x, self.enc1, skips, os)
+    x, skips, os = self.run_layer_skip(x, self.enc1, skips, os)
     x, skips, os = self.run_layer(x, self.dropout, skips, os)
-    x, skips, os = self.run_layer(x, self.enc2, skips, os)
+    x, skips, os = self.run_layer_skip(x, self.enc2, skips, os)
     x, skips, os = self.run_layer(x, self.dropout, skips, os)
-    x, skips, os = self.run_layer(x, self.enc3, skips, os)
+    x, skips, os = self.run_layer_skip(x, self.enc3, skips, os)
     x, skips, os = self.run_layer(x, self.dropout, skips, os)
-    x, skips, os = self.run_layer(x, self.enc4, skips, os)
+    x, skips, os = self.run_layer_skip(x, self.enc4, skips, os)
     x, skips, os = self.run_layer(x, self.dropout, skips, os)
-    x, skips, os = self.run_layer(x, self.enc5, skips, os)
+    x, skips, os = self.run_layer_skip(x, self.enc5, skips, os)
     x, skips, os = self.run_layer(x, self.dropout, skips, os)
 
     return x, skips
@@ -187,3 +188,4 @@
 
   def get_input_depth(self):
     return self.input_depth
+
